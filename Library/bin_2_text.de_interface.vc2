*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="bin_2_text.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
DEFINE CLASS de_interface AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="capBinText" UniqueID="" Timestamp="" />

	*<PropValue>
		DataSource = .NULL.
		DataSourceType = "NATIVE"
		Height = 34
		Name = "de_interface"
		Width = 144
	*</PropValue>

	ADD OBJECT 'capBinText' AS cursoradapter WITH ;
		Alias = "curbin2text", ;
		BufferModeOverride = 5, ;
		CursorSchema = cType c(1), cFile c(240), cObjName c(240),cUniqueID c(16) NOCPTRANS, tLastUse T, ;
		Flags = 0, ;
		Height = 22, ;
		KeyFieldList = cUniqueID, ;
		Left = 36, ;
		Name = "capBinText", ;
		SelectCmd = SELECT Cur1.cType, Cur1.cFile, Cur1.cObjName, Cur1.cUniqueID, Cur1.tLastUse FROM xTable AS Cur1 WHERE Cur1.cType=='A', ;
		Tables = xTable, ;
		Top = 2, ;
		UpdatableFieldList = cType, cFile, cObjName, cUniqueID, tLastUse, ;
		UpdateNameList = cType xTable.cType, cFile xTable.cFile, cObjName xTable.cObjName, cUniqueID xTable.cUniqueID, tLastUse xTable.tLastUse, ;
		UseCursorSchema = .T., ;
		Width = 23
		*< END OBJECT: BaseClass="cursoradapter" />
	
	PROCEDURE capBinText.AutoOpen
		*** Setup code: DO NOT REMOVE
		if not pemstatus(This, '__VFPSetup', 5)
			This.AddProperty('__VFPSetup', 1)
			This.Init()
		endif
		*** End of Setup code: DO NOT REMOVE
		
	ENDPROC

	PROCEDURE capBinText.Init
		*** Setup code: DO NOT REMOVE
		LOCAL llReturn
		DO CASE
		 CASE NOT PEMSTATUS(THIS, '__VFPSetup', 5)
		  THIS.ADDPROPERTY('__VFPSetup', 0)
		 CASE THIS.__VFPSetup = 1
		  THIS.__VFPSetup = 2
		 CASE THIS.__VFPSetup = 2
		  THIS.__VFPSetup = 0
		  RETURN
		ENDCASE
		SET MULTILOCKS ON
		llReturn = DODEFAULT()
		*** End of Setup code: DO NOT REMOVE
		
		*** Setup code: DO NOT REMOVE
		IF THIS.__VFPSetup = 1
		 THIS.__VFPSetup = 2
		ENDIF
		
		
		#IF .F. THEN
		
		 loa.SELECTCMD          = "SELECT Cur1.cType, Cur1.cFile, Cur1.cObjName, Cur1.cUniqueID, Cur1.tLastUse FROM xTable AS Cur1 WHERE Cur1.cType=='A'"
		 loa.CURSORSCHEMA       = "cType c(1), cFile c(240), cObjName c(240),cUniqueID c(16) NOCPTRANS, tLastUse T"
		 loa.TABLES             = "xTable"
		 loa.KEYFIELDLIST       = "cUniqueID"
		 loa.UPDATABLEFIELDLIST = "cType, cFile, cObjName, cUniqueID, tLastUse"
		 loa.UPDATENAMELIST     = "cType xTable.cType, cFile xTable.cFile, cObjName xTable.cObjName, cUniqueID xTable.cUniqueID, tLastUse xTable.tLastUse"
		
		#ENDIF &&.f.
		
		
		IF !PEMSTATUS(_SCREEN,'gcB2T_Path',5) OR EMPTY(_SCREEN.gcB2T_Path) OR !FILE(_SCREEN.gcB2T_Path) THEN
		 RETURN
		ENDIF &&!PEMSTATUS(_SCREEN,'gcB2T_Path',5) OR EMPTY(_SCREEN.gcB2T_Path) OR !FILE(_SCREEN.gcB2T_Path)
		
		THIS.DATASOURCETYPE = "NATIVE"
		LOCAL;
		 lcTable  AS CHARACTER,;
		 lcTemp   AS CHARACTER
		
		*Type des Adapters. Wird zum Löschen und Neuanlegen genutzt.
		*AllowDelete und AllowInsert auf entsprechende Werte setzten
		*im init:
		*THIS.gnBase_Type = THISFORM.gnBase_Type im ini
		lcTable          = THIS.PARENT.PARENT.cusB2T.Storage_Open(_SCREEN.gcB2T_Path)
		***<SelectCmd>
		TEXT TO m.lcTemp NOSHOW TEXTMERGE PRETEXT 7
		SELECT
		 Cur1.cType,
		 Cur1.cFile,
		 Cur1.cObjName,
		 Cur1.cUniqueID,
		 Cur1.tLastUse
		 FROM <<m.lcTable>> AS Cur1
		 WHERE Cur1.cType=='A'
		ENDTEXT
		lcTemp         = STRTRAN(m.lcTemp, 0h0D0A, " ")
		lcTemp         = STRTRAN(m.lcTemp, 0h09, "")
		THIS.SELECTCMD = m.lcTemp
		***</SelectCmd>
		
		***<CursorSchema>
		TEXT TO m.lcTemp NOSHOW PRETEXT 7
		  cType     c(1),
		  cFile     c(240),
		  cObjName  c(240),
		  cUniqueID c(16) NOCPTRANS,
		  tLastUse  T
		ENDTEXT
		lcTemp            = STRTRAN(m.lcTemp, 0h0D0A, "")
		THIS.CURSORSCHEMA = m.lcTemp
		***</CursorSchema>
		
		***<Tables>
		TEXT TO m.lcTemp NOSHOW TEXTMERGE PRETEXT 7
		<<lcTable>>
		ENDTEXT
		lcTemp      = STRTRAN(m.lcTemp, 0h0D0A, "")
		THIS.TABLES = m.lcTemp
		***</Tables>
		
		***<KeyFieldList>
		TEXT TO m.lcTemp NOSHOW PRETEXT 7
		cUniqueID
		ENDTEXT
		lcTemp            = STRTRAN(m.lcTemp, 0h0D0A, "")
		THIS.KEYFIELDLIST = m.lcTemp
		***</KeyFieldList>
		
		***<UpdatableFieldList>
		* IOBJ_IX,
		* PROJE_T_IX,
		TEXT TO m.lcTemp NOSHOW PRETEXT 7
		cType,
		cFile,
		cObjName,
		cUniqueID,
		tLastUse
		ENDTEXT
		lcTemp                  = STRTRAN(m.lcTemp, 0h0D0A, "")
		THIS.UPDATABLEFIELDLIST = m.lcTemp
		***</UpdatableFieldList>
		
		***<UpdateNameList>
		TEXT TO m.lcTemp NOSHOW TEXTMERGE PRETEXT 7
		cType     <<lcTable>>.cType,
		cFile     <<lcTable>>.cFile,
		cObjName  <<lcTable>>.cObjName,
		cUniqueID <<lcTable>>.cUniqueID,
		tLastUse  <<lcTable>>.tLastUse
		ENDTEXT
		lcTemp              = STRTRAN(m.lcTemp, 0h0D0A, "")
		THIS.UPDATENAMELIST = m.lcTemp
		***</UpdateNameList>
		
		THIS.CURSORFILL
		RETURN m.llReturn
		*** End of Setup code: DO NOT REMOVE
		
	ENDPROC

ENDDEFINE
